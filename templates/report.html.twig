{% extends "base.html.twig" %}

{% block title %}Home{% endblock %}

{% block body %}
    <h1>Här finner du mina redovisnigstexter för varje kursmoment.</h1>

    <ul class="list">
        <li><a href="#kmom01">kmom01</a></li>
        <li><a href="#kmom02">kmom02</a></li>
        <li><a href="#kmom03">kmom03</a></li>
        <li><a href="#kmom04">kmom04</a></li>
        <li><a href="#kmom05">kmom05</a></li>
        <li><a href="#kmom06">kmom06</a></li>
        <li><a href="#kmom10">kmom10</a></li>
    </ul>
    
    <h2 id="kmom01">kmom01</h2>

    <p>Nu startar kmom01! Jag har sedan tidigare endast erfarenhet av att nyligen gå en kurs i objekt orienterad python så det kommer bli kul att fortsätta koda objektorienterat i denna kursen.</p>
    <p>Några grunder som man behöver för att komma igång med objektorienterad php är att till att börja med så skall man veta hur man skapar en klass i php. Av klasser skapas objekt som skall/kan initieras men värden, klasser innehåller metoder som kan liknas vid funktioner som kan anvädas av objektet. Sedan så behöver man veta hur man importerar klasserna och skapar objekt.</p>
    <p>Kodstrukturen som jag har använt mig utav i symfony tycker jag liknar mycket strukturen som vi använde oss utav i express när vi gick databas kursen nyligen. Även flask tycker jag har väldigt lik struktur, även det något som vi nyligen har lärt oss. Så det känns bra att det är något som finns färskt i minnet som jag kommer ha användning utav och kunna utveckla mer!</p>
    <p>Artikeln “PHP The Right Way” tycker jag verkar vara en väldigt bra handbok för php som har med det mesta som är viktigt för att man skall börja koda. Några delar som hade varit kul att veta mer om hade varit delen "security" då det är en viktigt del av nätet idag.</p>
    <p>TIL för detta kmom är att starta en sida med symfony-ramverk</p>

    <h2 id="kmom02">kmom02</h2>
    <p>Nytt kmom! I detta kmom så har vi börjat jobba med klasser. För lite snabb förklaring av objektorienterade konstruktioner. Med arv så menas det att en klass kan ärva publica och "protected" konstruktioner ifrån en annan klass. Komposition innebär att en klass har en väldigt stark koppling till en annan klass, en av klass är beroende av att den andra klassen existerar. Om en klass implementerar ett interface så behöver den klassen innehålla ett visst antal metoder ifrån detta interfacet. Med hjälp av traits så kan klasser använda sig utav metoderna som finns i traits.</p>
    <p>Jag löste uppgifter genom att först börja med att implementera alla klasser(Card) som ligger i mappen Card. Därefter så skapade jag routesen i CardControllerRoutes efter varje ny route jag skapade så fick jag anpassa mina klasser så att dom gick att använda i routesen. Template filerna la jag till i skapandet av routsen, dessa filer la jag i templates/card. Därefter så fortsatte jag att skapa mina routes för jsonapi, för dessa routes så skapade jag en ny fil(CardControllerJson). Här fick jag också modifiera metoderna i klasserna så att det skulle skriva ut jsonapi. Jag är änsålänge nöjd med min implementation av klasser och routes, tycker det finns en bra ordning i dem. Det finns förstås mycket som säkert hade kunnat förbättras, en sak som hade kunnat förbättras är bl.a. hur korten skrivs ut. Här valde jag att göra det simpelt med utf-8 tecken.</p>
    <p>Mina reflektioner så långt in i kursen är att det är en rolig kurs som liknar mycket tidigare kurser som vi nyligen har avslutat, både Flask i oopython kursen och express i databas kursen är ganska lika symfoni. Kul att koda objektorienterat i ett annat språk! Vill även försöka bli bättre på commita till mitt repo så det kommer bli bra träning.</p>
    <p>TIL för detta kmom är objektorienterad php!</p>
    <h2 id="kmom03">kmom03</h2>
    <p>Nytt kmom klart! Har varit ett roligt kursmoment som har kännts som ett litet mindre projekt mitt i kursen som har inneburit lite planering.</p>
    <p>Jag började mitt "projekt" med att modellera mitt kortspel med hjälp av ett flödeschema och sedan pseudokod. Personligen så tycker jag att det var ett perfekt sätt att komma igång lite med brainstormingen innan man börjar skriva den riktiga koden. Det kändes helt enkelt som att jag fick en tydligare bild utav hur jag skulle fortsätta skriva koden.</p>
    <p>Jag löste uppgiften med hjälp av min tidigare planering från flödeschema och pseudokod. Sedan så tog jag en titt på mina tidigare metoder som jag har använt mig utav i kmom02 för att se vilka jag kunde dra nytta av där. Efter det så började jag helt enkelt med att implementera ytterligare metoder som fattades för att bygga mitt spel. Överlag så är jag nöjd över resultatet i slutändan jag valde att ha lintern på en lite lägre nivå som jag ansåg passade.</p>
    <p>Så här långt in i kursen så tycker jag att Symfony som ramverk är ett roligt ramverk att jobba med, inte allt för krångligt heller. Väldigt passande för denna utbildningen.</p>
    <p>TIL för detta kmom är att planera projekt med flödescheman och pseudokod.</p>
    <h2 id="kmom04">kmom04</h2>
    <p>Berätta hur du upplevde att skriva kod som testar annan kod med PHPUnit och hur du upplever phpunit rent allmänt.</p>
    <p>Jag tycker att phpunit är ett jättebra verktyg för att förstå sig på hur man skall tänka när man testar program/classer. När allting är så väl dokumenterat vad man skall testa på sidan, så klickar det snabbare hur man skall gå till väga för att gå vidare med att skapa testerna.</p>
    <p>Hur väl lyckades du med kodtäckningen av din kod, lyckades du nå mer än 90% kodtäckning?</p>
    <p>Jag lyckades till slut att nå 92% kodtäckning på classer och metoder!</p>
    <p>Upplever du din egen kod som “testbar kod” eller finns det delar i koden som är mer eller mindre testbar och finns det saker som kan göras för att förbättra kodens testbarhet?</p>
    <p>Eftersom att jag lyckades nå så pass bra kodtäckning så anser jag att min kod bör räknas som "testbar kod". </p>
    <p>Valde du att skriva om delar av din kod för att förbättra den eller göra den mer testbar, om så berätta lite hur du tänkte.</p>
    <p>Jag valde inte att ändra något på min kod när jag gjorde testen. När jag programmerade testerna så försökte jag att tänka att anpassa testerna efter koden snarare än tvärtom.</p>
    <p>Fundera över om du anser att testbar kod är något som kan identifiera “snygg och ren kod”.</p>
    <p>Jag tycker att ju lättare koden är att testa desto snyggare kod har man skrivit som troligtvis är lättare att läsa och förstå sig på.</p>
    <p>Vilken är din TIL för detta kmom?</p>
    <p>TIL för detta kmom är enhetstestning med phpunit. Tycker att det var ett kul sätt att skriva tester på där man även kan se hur man lyckats med kodtäckningen.</p>
    <h2 id="kmom05">kmom05</h2>
    <p>Gick det bra att jobba igenom övningen med Symfony och Doctrine. Något särskilt du tänkte/reagerade på under övningen?</p>
    <p>Det gick bra att jobba igenom övningen, det jag fastnade lite vid var att jag fick bygga om min databas ett par gånger men till slut så fick jag till det!</p>
    <p>Berätta om din applikation och hur du tänkte när du byggde upp den. Tänkte du något speciellt på användargränssnittet?</p>
    <p>Jag tog lite inspiration ifrån databas kursen där vi gjorde en liknande CRUD uppgift i express.js. Det blev en tabell där man kan se alla böcker i biblioteket, där det går att välja om man vill ta bort en bok eller uppdatera den. Längre ner så finner man en länk för att lägga till en bok.</p>
    <p>Gick det bra att jobba med ORM i CRUD eller vad anser du om det, jämför gärna med andra sätt att jobba med databaser?</p>
    <p>Jag tycker det var ganska smidigt att jobba med ORM i CRUD. Efter jag hade jobbat igenom övningen så hade jag den kunskapen jag behövde för att göra klart uppgiften.</p>
    <p>Vad är din uppfattning om ORM så här långt och relatera gärna till andra sätt att jobba med applikationskod mot databaser?</p>
    <p>Jämfört med tidigare kurser som databas och webtec där jag gjorde liknande uppgifter så tycker jag faktiskt att tänket är likt att man kopplar sig till en databas för att sedan exekvera olika typer av kommandon som sedan skickas till databasen. </p>
    <p>Vilken är din TIL för detta kmom?</p>
    <p>TIL för detta kmom är ORM!</p>
    <h2 id="kmom06">kmom06</h2>

    <h2 id="kmom10">kmom10</h2>
{% endblock %}